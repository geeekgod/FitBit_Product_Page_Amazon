{"version":3,"sources":["Data.js","components/Preview.js","components/Details.js","App.js","reportWebVitals.js","index.js"],"names":["Data","topLogo","title","description","colorOptions","styleName","imageUrl","featureList","Preview","props","currentHour","Date","getHours","currentMinute","getMinutes","className","src","previewImg","alt","showheart","class","Details","coloroptions","map","item","pos","optArr","previewposloc","push","join","onClick","onColorOptClick","featureBtn","btnArr","btnposloc","onFeatureClick","App","state","data","showheartrate","previewpos","btnpos","onColorClick","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7131d0d0.chunk.js","sourcesContent":["const Data = {\r\n    topLogo : 'https://pngimg.com/uploads/amazon/amazon_PNG11.png',\r\n    title: 'FitBit 19 - The Smart Watch',\r\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\r\n    colorOptions: [\r\n        {\r\n            styleName: 'Black Strap',\r\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\r\n        },\r\n        {\r\n            styleName: 'Red Strap',\r\n            imageUrl: 'https://imgur.com/PTgQlim.png'\r\n        },\r\n        {\r\n            styleName: 'Blue Strap',\r\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\r\n        },\r\n        {\r\n            styleName: 'Purple Strap',\r\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\r\n        },\r\n    ],\r\n    featureList: [\r\n        \"Time\", \"Heart Rate\"\r\n    ]\r\n}\r\n\r\n// Object.freeze(Data); //This line of code just makes your object as a constant. No values can be updated.\r\n\r\nexport default Data;","import React from 'react';\r\nimport  '../App.css';\r\n\r\nconst Preview = (props) => {\r\n    const currentHour = new Date().getHours() > 9 ? new Date().getHours() : '0' + new Date().getHours();\r\n  const currentMinute = new Date().getMinutes() > 9 ? new Date().getMinutes() : '0' + new Date().getMinutes();\r\n    return (\r\n        <>\r\n            <div className=\"preview\">\r\n            <img src={props.previewImg} alt=\"\"/>\r\n\r\n            {\r\n              props.showheart ? \r\n\r\n                <div className=\"heartrate\">\r\n                  <i class=\"fas fa-heartbeat\"></i>\r\n                  <p>78</p>\r\n               </div>\r\n\r\n             :\r\n              <div className=\"time\">\r\n                 <p>{`${currentHour}:${currentMinute}`}</p>\r\n              </div>\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Preview;","import React from 'react'\r\nimport '../App.css';\r\nimport Data from '../Data';\r\n\r\nconst Details = (props) => {\r\n\r\n    const coloroptions = Data.colorOptions.map((item, pos) =>   {\r\n      const optArr = [\"opt\"];\r\n      if(pos === props.previewposloc){\r\n        optArr.push(\"selected\");\r\n      }\r\n      return (\r\n        <img key={pos} src={item.imageUrl} className={optArr.join(\" \")} alt={item.styleName}\r\n          onClick ={() => props.onColorOptClick(pos)}\r\n        />\r\n      );\r\n    })\r\n\r\n    const featureBtn = Data.featureList.map((item, pos) => {\r\n      const btnArr = [\"btn\"];\r\n      if(pos === props.btnposloc){\r\n        btnArr.push(\"selected\");\r\n      }\r\n      return(\r\n        <button key={pos} onClick={() => props.onFeatureClick(pos)} className={btnArr.join(\" \")}>{item}</button>\r\n      )\r\n    })\r\n    return (\r\n        <>\r\n            <div className=\"details\">\r\n          <div className=\"txt\">\r\n            <h1>{Data.title}</h1>\r\n            <p className=\"desc\">{Data.description}</p>\r\n          </div>\r\n          <h4>Select Color</h4>\r\n          <div className=\"selector\">\r\n            {coloroptions}\r\n\r\n            {/* <img src={Data.colorOptions[0].imageUrl } className=\"selected\" alt=\"\"/>\r\n            <img src={Data.colorOptions[1].imageUrl } alt=\"\"/>\r\n            <img src={Data.colorOptions[2].imageUrl } alt=\"\"/>\r\n            <img src={Data.colorOptions[3].imageUrl } alt=\"\"/> */}\r\n          </div>  \r\n\r\n          <h4>Features</h4>\r\n          <div className=\"btn-cont\">\r\n            {featureBtn}\r\n              {/* <button className=\"selected\">Time</button>\r\n              <button>Heart Rate</button> */}\r\n          </div>\r\n          <button className=\"primaryButton\">Buy Now</button>\r\n        </div>\r\n        </>   \r\n    )\r\n}\r\n\r\nexport default Details;","import React from 'react';\nimport {Component} from 'react';\nimport './App.css';\nimport Data from './Data';\nimport Preview from './components/Preview';\nimport Details from './components/Details';\n\nclass App extends Component{\n  state = {\n    data : Data,\n    showheartrate : false,\n    previewpos : 0,\n    btnpos:0\n  }\n\n  onColorClick = (pos) =>{\n    this.setState({previewpos : pos});\n  }\n\n  onFeatureClick = (pos) =>{\n    if(pos === 0){\n      this.setState({showheartrate:false, btnpos:pos})\n    }\n    else{\n      this.setState({showheartrate:true,  btnpos:pos})\n    }\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <img src={Data.topLogo} alt=\"\"/>\n          </nav>\n        </header>\n      \n        <div className=\"main\">\n          < Preview previewImg = {this.state.data.colorOptions[this.state.previewpos].imageUrl} showheart = {this.state.showheartrate} />\n          < Details btnposloc = {this.state.btnpos} onFeatureClick = {this.onFeatureClick} onColorOptClick = {this.onColorClick} previewposloc = {this.state.previewpos}/>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}